"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@auth";
exports.ids = ["vendor-chunks/@auth"];
exports.modules = {

/***/ "(action-browser)/./node_modules/@auth/drizzle-adapter/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@auth/drizzle-adapter/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DrizzleAdapter: () => (/* binding */ DrizzleAdapter)\n/* harmony export */ });\n/* harmony import */ var drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! drizzle-orm/mysql-core */ \"(action-browser)/./node_modules/drizzle-orm/mysql-core/index.js\");\n/* harmony import */ var drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! drizzle-orm/pg-core */ \"(action-browser)/./node_modules/drizzle-orm/pg-core/index.js\");\n/* harmony import */ var drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! drizzle-orm/sqlite-core */ \"(action-browser)/./node_modules/drizzle-orm/sqlite-core/index.js\");\n/* harmony import */ var _lib_mysql_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/mysql.js */ \"(action-browser)/./node_modules/@auth/drizzle-adapter/lib/mysql.js\");\n/* harmony import */ var _lib_pg_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/pg.js */ \"(action-browser)/./node_modules/@auth/drizzle-adapter/lib/pg.js\");\n/* harmony import */ var _lib_sqlite_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/sqlite.js */ \"(action-browser)/./node_modules/@auth/drizzle-adapter/lib/sqlite.js\");\n/* harmony import */ var drizzle_orm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! drizzle-orm */ \"(action-browser)/./node_modules/drizzle-orm/index.js\");\n/**\n * <div style={{display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", padding: 16}}>\n *  <p style={{fontWeight: \"normal\"}}>Official <a href=\"https://orm.drizzle.team\">Drizzle ORM</a> adapter for Auth.js / NextAuth.js.</p>\n *  <a href=\"https://orm.drizzle.team\">\n *   <img style={{display: \"block\"}} src=\"/img/adapters/drizzle-orm.png\" width=\"38\" />\n *  </a>\n * </div>\n *\n * ## Installation\n *\n * ```bash npm2yarn\n * npm install drizzle-orm @auth/drizzle-adapter\n * npm install drizzle-kit --save-dev\n * ```\n *\n * @module @auth/drizzle-adapter\n */\n\n\n\n\n\n\n\n/**\n * Add the adapter to your `pages/api/[...nextauth].ts` next-auth configuration object.\n *\n * ```ts title=\"pages/api/auth/[...nextauth].ts\"\n * import NextAuth from \"next-auth\"\n * import GoogleProvider from \"next-auth/providers/google\"\n * import { DrizzleAdapter } from \"@auth/drizzle-adapter\"\n * import { db } from \"./schema\"\n *\n * export default NextAuth({\n *   adapter: DrizzleAdapter(db),\n *   providers: [\n *     GoogleProvider({\n *       clientId: process.env.GOOGLE_CLIENT_ID,\n *       clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n *     }),\n *   ],\n * })\n * ```\n *\n * :::info\n * If you're using multi-project schemas, you can pass your table function as a second argument\n * :::\n *\n * ## Setup\n *\n * First, create a schema that includes [the minimum requirements for a `next-auth` adapter](/reference/core/adapters#models). You can select your favorite SQL flavor below and copy it.\n * Additionally, you may extend the schema from the minimum requirements to suit your needs.\n *\n * - [Postgres](#postgres)\n * - [MySQL](#mysql)\n * - [SQLite](#sqlite)\n *\n * ### Postgres\n\n * ```ts title=\"schema.ts\"\n * import {\n *   timestamp,\n *   pgTable,\n *   text,\n *   primaryKey,\n *  integer\n * } from \"drizzle-orm/pg-core\"\n * import type { AdapterAccount } from '@auth/core/adapters'\n *\n * export const users = pgTable(\"user\", {\n *  id: text(\"id\").notNull().primaryKey(),\n *  name: text(\"name\"),\n *  email: text(\"email\").notNull(),\n *  emailVerified: timestamp(\"emailVerified\", { mode: \"date\" }),\n *  image: text(\"image\"),\n * })\n *\n * export const accounts = pgTable(\n * \"account\",\n * {\n *   userId: text(\"userId\")\n *     .notNull()\n *     .references(() => users.id, { onDelete: \"cascade\" }),\n *   type: text(\"type\").$type<AdapterAccount[\"type\"]>().notNull(),\n *   provider: text(\"provider\").notNull(),\n *   providerAccountId: text(\"providerAccountId\").notNull(),\n *   refresh_token: text(\"refresh_token\"),\n *   access_token: text(\"access_token\"),\n *   expires_at: integer(\"expires_at\"),\n *   token_type: text(\"token_type\"),\n *   scope: text(\"scope\"),\n *    id_token: text(\"id_token\"),\n *   session_state: text(\"session_state\"),\n * },\n * (account) => ({\n *   compoundKey: primaryKey({ columns: [account.provider, account.providerAccountId] }),\n * })\n * )\n *\n * export const sessions = pgTable(\"session\", {\n *  sessionToken: text(\"sessionToken\").notNull().primaryKey(),\n *  userId: text(\"userId\")\n *    .notNull()\n *    .references(() => users.id, { onDelete: \"cascade\" }),\n *  expires: timestamp(\"expires\", { mode: \"date\" }).notNull(),\n * })\n *\n * export const verificationTokens = pgTable(\n *  \"verificationToken\",\n *  {\n *    identifier: text(\"identifier\").notNull(),\n *    token: text(\"token\").notNull(),\n *    expires: timestamp(\"expires\", { mode: \"date\" }).notNull(),\n *  },\n *  (vt) => ({\n *    compoundKey: primaryKey({ columns: [vt.identifier, vt.token] }),\n *  })\n * )\n * ```\n *\n * ### MySQL\n *\n * ```ts title=\"schema.ts\"\n * import {\n *  int,\n *  timestamp,\n *  mysqlTable,\n *  primaryKey,\n *  varchar,\n * } from \"drizzle-orm/mysql-core\"\n * import type { AdapterAccount } from \"@auth/core/adapters\"\n *\n * export const users = mysqlTable(\"user\", {\n *  id: varchar(\"id\", { length: 255 }).notNull().primaryKey(),\n *  name: varchar(\"name\", { length: 255 }),\n *  email: varchar(\"email\", { length: 255 }).notNull(),\n *   emailVerified: timestamp(\"emailVerified\", { mode: \"date\", fsp: 3 }).defaultNow(),\n *  image: varchar(\"image\", { length: 255 }),\n * })\n *\n * export const accounts = mysqlTable(\n *  \"account\",\n *   {\n *    userId: varchar(\"userId\", { length: 255 })\n *       .notNull()\n *       .references(() => users.id, { onDelete: \"cascade\" }),\n *    type: varchar(\"type\", { length: 255 }).$type<AdapterAccount[\"type\"]>().notNull(),\n *     provider: varchar(\"provider\", { length: 255 }).notNull(),\n *    providerAccountId: varchar(\"providerAccountId\", { length: 255 }).notNull(),\n *    refresh_token: varchar(\"refresh_token\", { length: 255 }),\n *    access_token: varchar(\"access_token\", { length: 255 }),\n *    expires_at: int(\"expires_at\"),\n *   token_type: varchar(\"token_type\", { length: 255 }),\n *   scope: varchar(\"scope\", { length: 255 }),\n *   id_token: varchar(\"id_token\", { length: 2048 }),\n *   session_state: varchar(\"session_state\", { length: 255 }),\n * },\n * (account) => ({\n *    compoundKey: primaryKey({\n        columns: [account.provider, account.providerAccountId],\n      }),\n * })\n * )\n *\n * export const sessions = mysqlTable(\"session\", {\n *  sessionToken: varchar(\"sessionToken\", { length: 255 }).notNull().primaryKey(),\n *  userId: varchar(\"userId\", { length: 255 })\n *    .notNull()\n *    .references(() => users.id, { onDelete: \"cascade\" }),\n *  expires: timestamp(\"expires\", { mode: \"date\" }).notNull(),\n * })\n *\n * export const verificationTokens = mysqlTable(\n * \"verificationToken\",\n * {\n *   identifier: varchar(\"identifier\", { length: 255 }).notNull(),\n *   token: varchar(\"token\", { length: 255 }).notNull(),\n *   expires: timestamp(\"expires\", { mode: \"date\" }).notNull(),\n * },\n * (vt) => ({\n *   compoundKey: primaryKey({ columns: [vt.identifier, vt.token] }),\n * })\n * )\n * ```\n *\n * ### SQLite\n *\n * ```ts title=\"schema.ts\"\n * import { integer, sqliteTable, text, primaryKey } from \"drizzle-orm/sqlite-core\"\n * import type { AdapterAccount } from \"@auth/core/adapters\"\n *\n * export const users = sqliteTable(\"user\", {\n *  id: text(\"id\").notNull().primaryKey(),\n *  name: text(\"name\"),\n *  email: text(\"email\").notNull(),\n *  emailVerified: integer(\"emailVerified\", { mode: \"timestamp_ms\" }),\n *  image: text(\"image\"),\n * })\n *\n * export const accounts = sqliteTable(\n *  \"account\",\n *  {\n *    userId: text(\"userId\")\n *      .notNull()\n *      .references(() => users.id, { onDelete: \"cascade\" }),\n *    type: text(\"type\").$type<AdapterAccount[\"type\"]>().notNull(),\n *    provider: text(\"provider\").notNull(),\n *    providerAccountId: text(\"providerAccountId\").notNull(),\n *    refresh_token: text(\"refresh_token\"),\n *    access_token: text(\"access_token\"),\n *    expires_at: integer(\"expires_at\"),\n *    token_type: text(\"token_type\"),\n *    scope: text(\"scope\"),\n *    id_token: text(\"id_token\"),\n *    session_state: text(\"session_state\"),\n *  },\n *  (account) => ({\n *    compoundKey: primaryKey({\n        columns: [account.provider, account.providerAccountId],\n      }),\n *  })\n * )\n *\n * export const sessions = sqliteTable(\"session\", {\n * sessionToken: text(\"sessionToken\").notNull().primaryKey(),\n * userId: text(\"userId\")\n *   .notNull()\n *   .references(() => users.id, { onDelete: \"cascade\" }),\n * expires: integer(\"expires\", { mode: \"timestamp_ms\" }).notNull(),\n * })\n *\n * export const verificationTokens = sqliteTable(\n * \"verificationToken\",\n * {\n *   identifier: text(\"identifier\").notNull(),\n *   token: text(\"token\").notNull(),\n *   expires: integer(\"expires\", { mode: \"timestamp_ms\" }).notNull(),\n * },\n * (vt) => ({\n *   compoundKey: primaryKey({ columns: [vt.identifier, vt.token] }),\n * })\n * )\n * ```\n *\n * ## Migrating your database\n * With your schema now described in your code, you'll need to migrate your database to your schema.\n *\n * For full documentation on how to run migrations with Drizzle, [visit the Drizzle documentation](https://orm.drizzle.team/kit-docs/overview#running-migrations).\n *\n * ---\n *\n **/\nfunction DrizzleAdapter(db, table) {\n    if ((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_3__.is)(db, drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_4__.MySqlDatabase)) {\n        return (0,_lib_mysql_js__WEBPACK_IMPORTED_MODULE_0__.mySqlDrizzleAdapter)(db, table);\n    }\n    else if ((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_3__.is)(db, drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_5__.PgDatabase)) {\n        return (0,_lib_pg_js__WEBPACK_IMPORTED_MODULE_1__.pgDrizzleAdapter)(db, table);\n    }\n    else if ((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_3__.is)(db, drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_6__.BaseSQLiteDatabase)) {\n        return (0,_lib_sqlite_js__WEBPACK_IMPORTED_MODULE_2__.SQLiteDrizzleAdapter)(db, table);\n    }\n    throw new Error(`Unsupported database type (${typeof db}) in Auth.js Drizzle adapter.`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/drizzle-adapter/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/drizzle-adapter/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@auth/drizzle-adapter/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DrizzleAdapter: () => (/* binding */ DrizzleAdapter)\n/* harmony export */ });\n/* harmony import */ var drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! drizzle-orm/mysql-core */ \"(rsc)/./node_modules/drizzle-orm/mysql-core/db.js\");\n/* harmony import */ var drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! drizzle-orm/pg-core */ \"(rsc)/./node_modules/drizzle-orm/pg-core/db.js\");\n/* harmony import */ var drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! drizzle-orm/sqlite-core */ \"(rsc)/./node_modules/drizzle-orm/sqlite-core/db.js\");\n/* harmony import */ var _lib_mysql_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/mysql.js */ \"(rsc)/./node_modules/@auth/drizzle-adapter/lib/mysql.js\");\n/* harmony import */ var _lib_pg_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/pg.js */ \"(rsc)/./node_modules/@auth/drizzle-adapter/lib/pg.js\");\n/* harmony import */ var _lib_sqlite_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/sqlite.js */ \"(rsc)/./node_modules/@auth/drizzle-adapter/lib/sqlite.js\");\n/* harmony import */ var drizzle_orm__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! drizzle-orm */ \"(rsc)/./node_modules/drizzle-orm/entity.js\");\n/**\n * <div style={{display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", padding: 16}}>\n *  <p style={{fontWeight: \"normal\"}}>Official <a href=\"https://orm.drizzle.team\">Drizzle ORM</a> adapter for Auth.js / NextAuth.js.</p>\n *  <a href=\"https://orm.drizzle.team\">\n *   <img style={{display: \"block\"}} src=\"/img/adapters/drizzle-orm.png\" width=\"38\" />\n *  </a>\n * </div>\n *\n * ## Installation\n *\n * ```bash npm2yarn\n * npm install drizzle-orm @auth/drizzle-adapter\n * npm install drizzle-kit --save-dev\n * ```\n *\n * @module @auth/drizzle-adapter\n */\n\n\n\n\n\n\n\n/**\n * Add the adapter to your `pages/api/[...nextauth].ts` next-auth configuration object.\n *\n * ```ts title=\"pages/api/auth/[...nextauth].ts\"\n * import NextAuth from \"next-auth\"\n * import GoogleProvider from \"next-auth/providers/google\"\n * import { DrizzleAdapter } from \"@auth/drizzle-adapter\"\n * import { db } from \"./schema\"\n *\n * export default NextAuth({\n *   adapter: DrizzleAdapter(db),\n *   providers: [\n *     GoogleProvider({\n *       clientId: process.env.GOOGLE_CLIENT_ID,\n *       clientSecret: process.env.GOOGLE_CLIENT_SECRET,\n *     }),\n *   ],\n * })\n * ```\n *\n * :::info\n * If you're using multi-project schemas, you can pass your table function as a second argument\n * :::\n *\n * ## Setup\n *\n * First, create a schema that includes [the minimum requirements for a `next-auth` adapter](/reference/core/adapters#models). You can select your favorite SQL flavor below and copy it.\n * Additionally, you may extend the schema from the minimum requirements to suit your needs.\n *\n * - [Postgres](#postgres)\n * - [MySQL](#mysql)\n * - [SQLite](#sqlite)\n *\n * ### Postgres\n\n * ```ts title=\"schema.ts\"\n * import {\n *   timestamp,\n *   pgTable,\n *   text,\n *   primaryKey,\n *  integer\n * } from \"drizzle-orm/pg-core\"\n * import type { AdapterAccount } from '@auth/core/adapters'\n *\n * export const users = pgTable(\"user\", {\n *  id: text(\"id\").notNull().primaryKey(),\n *  name: text(\"name\"),\n *  email: text(\"email\").notNull(),\n *  emailVerified: timestamp(\"emailVerified\", { mode: \"date\" }),\n *  image: text(\"image\"),\n * })\n *\n * export const accounts = pgTable(\n * \"account\",\n * {\n *   userId: text(\"userId\")\n *     .notNull()\n *     .references(() => users.id, { onDelete: \"cascade\" }),\n *   type: text(\"type\").$type<AdapterAccount[\"type\"]>().notNull(),\n *   provider: text(\"provider\").notNull(),\n *   providerAccountId: text(\"providerAccountId\").notNull(),\n *   refresh_token: text(\"refresh_token\"),\n *   access_token: text(\"access_token\"),\n *   expires_at: integer(\"expires_at\"),\n *   token_type: text(\"token_type\"),\n *   scope: text(\"scope\"),\n *    id_token: text(\"id_token\"),\n *   session_state: text(\"session_state\"),\n * },\n * (account) => ({\n *   compoundKey: primaryKey({ columns: [account.provider, account.providerAccountId] }),\n * })\n * )\n *\n * export const sessions = pgTable(\"session\", {\n *  sessionToken: text(\"sessionToken\").notNull().primaryKey(),\n *  userId: text(\"userId\")\n *    .notNull()\n *    .references(() => users.id, { onDelete: \"cascade\" }),\n *  expires: timestamp(\"expires\", { mode: \"date\" }).notNull(),\n * })\n *\n * export const verificationTokens = pgTable(\n *  \"verificationToken\",\n *  {\n *    identifier: text(\"identifier\").notNull(),\n *    token: text(\"token\").notNull(),\n *    expires: timestamp(\"expires\", { mode: \"date\" }).notNull(),\n *  },\n *  (vt) => ({\n *    compoundKey: primaryKey({ columns: [vt.identifier, vt.token] }),\n *  })\n * )\n * ```\n *\n * ### MySQL\n *\n * ```ts title=\"schema.ts\"\n * import {\n *  int,\n *  timestamp,\n *  mysqlTable,\n *  primaryKey,\n *  varchar,\n * } from \"drizzle-orm/mysql-core\"\n * import type { AdapterAccount } from \"@auth/core/adapters\"\n *\n * export const users = mysqlTable(\"user\", {\n *  id: varchar(\"id\", { length: 255 }).notNull().primaryKey(),\n *  name: varchar(\"name\", { length: 255 }),\n *  email: varchar(\"email\", { length: 255 }).notNull(),\n *   emailVerified: timestamp(\"emailVerified\", { mode: \"date\", fsp: 3 }).defaultNow(),\n *  image: varchar(\"image\", { length: 255 }),\n * })\n *\n * export const accounts = mysqlTable(\n *  \"account\",\n *   {\n *    userId: varchar(\"userId\", { length: 255 })\n *       .notNull()\n *       .references(() => users.id, { onDelete: \"cascade\" }),\n *    type: varchar(\"type\", { length: 255 }).$type<AdapterAccount[\"type\"]>().notNull(),\n *     provider: varchar(\"provider\", { length: 255 }).notNull(),\n *    providerAccountId: varchar(\"providerAccountId\", { length: 255 }).notNull(),\n *    refresh_token: varchar(\"refresh_token\", { length: 255 }),\n *    access_token: varchar(\"access_token\", { length: 255 }),\n *    expires_at: int(\"expires_at\"),\n *   token_type: varchar(\"token_type\", { length: 255 }),\n *   scope: varchar(\"scope\", { length: 255 }),\n *   id_token: varchar(\"id_token\", { length: 2048 }),\n *   session_state: varchar(\"session_state\", { length: 255 }),\n * },\n * (account) => ({\n *    compoundKey: primaryKey({\n        columns: [account.provider, account.providerAccountId],\n      }),\n * })\n * )\n *\n * export const sessions = mysqlTable(\"session\", {\n *  sessionToken: varchar(\"sessionToken\", { length: 255 }).notNull().primaryKey(),\n *  userId: varchar(\"userId\", { length: 255 })\n *    .notNull()\n *    .references(() => users.id, { onDelete: \"cascade\" }),\n *  expires: timestamp(\"expires\", { mode: \"date\" }).notNull(),\n * })\n *\n * export const verificationTokens = mysqlTable(\n * \"verificationToken\",\n * {\n *   identifier: varchar(\"identifier\", { length: 255 }).notNull(),\n *   token: varchar(\"token\", { length: 255 }).notNull(),\n *   expires: timestamp(\"expires\", { mode: \"date\" }).notNull(),\n * },\n * (vt) => ({\n *   compoundKey: primaryKey({ columns: [vt.identifier, vt.token] }),\n * })\n * )\n * ```\n *\n * ### SQLite\n *\n * ```ts title=\"schema.ts\"\n * import { integer, sqliteTable, text, primaryKey } from \"drizzle-orm/sqlite-core\"\n * import type { AdapterAccount } from \"@auth/core/adapters\"\n *\n * export const users = sqliteTable(\"user\", {\n *  id: text(\"id\").notNull().primaryKey(),\n *  name: text(\"name\"),\n *  email: text(\"email\").notNull(),\n *  emailVerified: integer(\"emailVerified\", { mode: \"timestamp_ms\" }),\n *  image: text(\"image\"),\n * })\n *\n * export const accounts = sqliteTable(\n *  \"account\",\n *  {\n *    userId: text(\"userId\")\n *      .notNull()\n *      .references(() => users.id, { onDelete: \"cascade\" }),\n *    type: text(\"type\").$type<AdapterAccount[\"type\"]>().notNull(),\n *    provider: text(\"provider\").notNull(),\n *    providerAccountId: text(\"providerAccountId\").notNull(),\n *    refresh_token: text(\"refresh_token\"),\n *    access_token: text(\"access_token\"),\n *    expires_at: integer(\"expires_at\"),\n *    token_type: text(\"token_type\"),\n *    scope: text(\"scope\"),\n *    id_token: text(\"id_token\"),\n *    session_state: text(\"session_state\"),\n *  },\n *  (account) => ({\n *    compoundKey: primaryKey({\n        columns: [account.provider, account.providerAccountId],\n      }),\n *  })\n * )\n *\n * export const sessions = sqliteTable(\"session\", {\n * sessionToken: text(\"sessionToken\").notNull().primaryKey(),\n * userId: text(\"userId\")\n *   .notNull()\n *   .references(() => users.id, { onDelete: \"cascade\" }),\n * expires: integer(\"expires\", { mode: \"timestamp_ms\" }).notNull(),\n * })\n *\n * export const verificationTokens = sqliteTable(\n * \"verificationToken\",\n * {\n *   identifier: text(\"identifier\").notNull(),\n *   token: text(\"token\").notNull(),\n *   expires: integer(\"expires\", { mode: \"timestamp_ms\" }).notNull(),\n * },\n * (vt) => ({\n *   compoundKey: primaryKey({ columns: [vt.identifier, vt.token] }),\n * })\n * )\n * ```\n *\n * ## Migrating your database\n * With your schema now described in your code, you'll need to migrate your database to your schema.\n *\n * For full documentation on how to run migrations with Drizzle, [visit the Drizzle documentation](https://orm.drizzle.team/kit-docs/overview#running-migrations).\n *\n * ---\n *\n **/\nfunction DrizzleAdapter(db, table) {\n    if ((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_3__.is)(db, drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_4__.MySqlDatabase)) {\n        return (0,_lib_mysql_js__WEBPACK_IMPORTED_MODULE_0__.mySqlDrizzleAdapter)(db, table);\n    }\n    else if ((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_3__.is)(db, drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_5__.PgDatabase)) {\n        return (0,_lib_pg_js__WEBPACK_IMPORTED_MODULE_1__.pgDrizzleAdapter)(db, table);\n    }\n    else if ((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_3__.is)(db, drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_6__.BaseSQLiteDatabase)) {\n        return (0,_lib_sqlite_js__WEBPACK_IMPORTED_MODULE_2__.SQLiteDrizzleAdapter)(db, table);\n    }\n    throw new Error(`Unsupported database type (${typeof db}) in Auth.js Drizzle adapter.`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/drizzle-adapter/index.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/drizzle-adapter/lib/mysql.js":
/*!*********************************************************!*\
  !*** ./node_modules/@auth/drizzle-adapter/lib/mysql.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTables: () => (/* binding */ createTables),\n/* harmony export */   mySqlDrizzleAdapter: () => (/* binding */ mySqlDrizzleAdapter)\n/* harmony export */ });\n/* harmony import */ var drizzle_orm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! drizzle-orm */ \"(action-browser)/./node_modules/drizzle-orm/index.js\");\n/* harmony import */ var drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! drizzle-orm/mysql-core */ \"(action-browser)/./node_modules/drizzle-orm/mysql-core/index.js\");\n\n\nfunction createTables(mySqlTable) {\n    const users = mySqlTable(\"user\", {\n        id: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"id\", { length: 255 }).notNull().primaryKey(),\n        name: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"name\", { length: 255 }),\n        email: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"email\", { length: 255 }).notNull(),\n        emailVerified: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.timestamp)(\"emailVerified\", {\n            mode: \"date\",\n            fsp: 3,\n        }).defaultNow(),\n        image: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"image\", { length: 255 }),\n    });\n    const accounts = mySqlTable(\"account\", {\n        userId: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"userId\", { length: 255 })\n            .notNull()\n            .references(() => users.id, { onDelete: \"cascade\" }),\n        type: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"type\", { length: 255 })\n            .$type()\n            .notNull(),\n        provider: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"provider\", { length: 255 }).notNull(),\n        providerAccountId: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"providerAccountId\", {\n            length: 255,\n        }).notNull(),\n        refresh_token: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"refresh_token\", { length: 255 }),\n        access_token: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"access_token\", { length: 255 }),\n        expires_at: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.int)(\"expires_at\"),\n        token_type: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"token_type\", { length: 255 }),\n        scope: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"scope\", { length: 255 }),\n        id_token: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"id_token\", { length: 255 }),\n        session_state: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"session_state\", { length: 255 }),\n    }, (account) => ({\n        compoundKey: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.primaryKey)(account.provider, account.providerAccountId),\n    }));\n    const sessions = mySqlTable(\"session\", {\n        sessionToken: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"sessionToken\", { length: 255 })\n            .notNull()\n            .primaryKey(),\n        userId: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"userId\", { length: 255 })\n            .notNull()\n            .references(() => users.id, { onDelete: \"cascade\" }),\n        expires: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.timestamp)(\"expires\", { mode: \"date\" }).notNull(),\n    });\n    const verificationTokens = mySqlTable(\"verificationToken\", {\n        identifier: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"identifier\", { length: 255 }).notNull(),\n        token: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"token\", { length: 255 }).notNull(),\n        expires: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.timestamp)(\"expires\", { mode: \"date\" }).notNull(),\n    }, (vt) => ({\n        compoundKey: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.primaryKey)(vt.identifier, vt.token),\n    }));\n    return { users, accounts, sessions, verificationTokens };\n}\nfunction mySqlDrizzleAdapter(client, tableFn = drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.mysqlTable) {\n    const { users, accounts, sessions, verificationTokens } = createTables(tableFn);\n    return {\n        async createUser(data) {\n            const id = crypto.randomUUID();\n            await client.insert(users).values({ ...data, id });\n            return await client\n                .select()\n                .from(users)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.eq)(users.id, id))\n                .then((res) => res[0]);\n        },\n        async getUser(data) {\n            const thing = (await client\n                .select()\n                .from(users)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.eq)(users.id, data))\n                .then((res) => res[0])) ?? null;\n            return thing;\n        },\n        async getUserByEmail(data) {\n            const user = (await client\n                .select()\n                .from(users)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.eq)(users.email, data))\n                .then((res) => res[0])) ?? null;\n            return user;\n        },\n        async createSession(data) {\n            await client.insert(sessions).values(data);\n            return await client\n                .select()\n                .from(sessions)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.eq)(sessions.sessionToken, data.sessionToken))\n                .then((res) => res[0]);\n        },\n        async getSessionAndUser(data) {\n            const sessionAndUser = (await client\n                .select({\n                session: sessions,\n                user: users,\n            })\n                .from(sessions)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.eq)(sessions.sessionToken, data))\n                .innerJoin(users, (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.eq)(users.id, sessions.userId))\n                .then((res) => res[0])) ?? null;\n            return sessionAndUser;\n        },\n        async updateUser(data) {\n            if (!data.id) {\n                throw new Error(\"No user id.\");\n            }\n            await client.update(users).set(data).where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.eq)(users.id, data.id));\n            return await client\n                .select()\n                .from(users)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.eq)(users.id, data.id))\n                .then((res) => res[0]);\n        },\n        async updateSession(data) {\n            await client\n                .update(sessions)\n                .set(data)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.eq)(sessions.sessionToken, data.sessionToken));\n            return await client\n                .select()\n                .from(sessions)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.eq)(sessions.sessionToken, data.sessionToken))\n                .then((res) => res[0]);\n        },\n        async linkAccount(rawAccount) {\n            await client.insert(accounts).values(rawAccount);\n        },\n        async getUserByAccount(account) {\n            const dbAccount = (await client\n                .select()\n                .from(accounts)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.and)((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.eq)(accounts.providerAccountId, account.providerAccountId), (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.eq)(accounts.provider, account.provider)))\n                .leftJoin(users, (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.eq)(accounts.userId, users.id))\n                .then((res) => res[0])) ?? null;\n            if (!dbAccount) {\n                return null;\n            }\n            return dbAccount.user;\n        },\n        async deleteSession(sessionToken) {\n            const session = (await client\n                .select()\n                .from(sessions)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.eq)(sessions.sessionToken, sessionToken))\n                .then((res) => res[0])) ?? null;\n            await client\n                .delete(sessions)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.eq)(sessions.sessionToken, sessionToken));\n            return session;\n        },\n        async createVerificationToken(token) {\n            await client.insert(verificationTokens).values(token);\n            return await client\n                .select()\n                .from(verificationTokens)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.eq)(verificationTokens.identifier, token.identifier))\n                .then((res) => res[0]);\n        },\n        async useVerificationToken(token) {\n            try {\n                const deletedToken = (await client\n                    .select()\n                    .from(verificationTokens)\n                    .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.and)((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.eq)(verificationTokens.identifier, token.identifier), (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.eq)(verificationTokens.token, token.token)))\n                    .then((res) => res[0])) ?? null;\n                await client\n                    .delete(verificationTokens)\n                    .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.and)((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.eq)(verificationTokens.identifier, token.identifier), (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.eq)(verificationTokens.token, token.token)));\n                return deletedToken;\n            }\n            catch (err) {\n                throw new Error(\"No verification token found.\");\n            }\n        },\n        async deleteUser(id) {\n            const user = await client\n                .select()\n                .from(users)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.eq)(users.id, id))\n                .then((res) => res[0] ?? null);\n            await client.delete(users).where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.eq)(users.id, id));\n            return user;\n        },\n        async unlinkAccount(account) {\n            await client\n                .delete(accounts)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.and)((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.eq)(accounts.providerAccountId, account.providerAccountId), (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_1__.eq)(accounts.provider, account.provider)));\n            return undefined;\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/drizzle-adapter/lib/mysql.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/drizzle-adapter/lib/mysql.js":
/*!*********************************************************!*\
  !*** ./node_modules/@auth/drizzle-adapter/lib/mysql.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTables: () => (/* binding */ createTables),\n/* harmony export */   mySqlDrizzleAdapter: () => (/* binding */ mySqlDrizzleAdapter)\n/* harmony export */ });\n/* harmony import */ var drizzle_orm__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! drizzle-orm */ \"(rsc)/./node_modules/drizzle-orm/sql/expressions/conditions.js\");\n/* harmony import */ var drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! drizzle-orm/mysql-core */ \"(rsc)/./node_modules/drizzle-orm/mysql-core/columns/varchar.js\");\n/* harmony import */ var drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! drizzle-orm/mysql-core */ \"(rsc)/./node_modules/drizzle-orm/mysql-core/columns/timestamp.js\");\n/* harmony import */ var drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! drizzle-orm/mysql-core */ \"(rsc)/./node_modules/drizzle-orm/mysql-core/columns/int.js\");\n/* harmony import */ var drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! drizzle-orm/mysql-core */ \"(rsc)/./node_modules/drizzle-orm/mysql-core/primary-keys.js\");\n/* harmony import */ var drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! drizzle-orm/mysql-core */ \"(rsc)/./node_modules/drizzle-orm/mysql-core/table.js\");\n\n\nfunction createTables(mySqlTable) {\n    const users = mySqlTable(\"user\", {\n        id: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"id\", { length: 255 }).notNull().primaryKey(),\n        name: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"name\", { length: 255 }),\n        email: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"email\", { length: 255 }).notNull(),\n        emailVerified: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_1__.timestamp)(\"emailVerified\", {\n            mode: \"date\",\n            fsp: 3,\n        }).defaultNow(),\n        image: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"image\", { length: 255 }),\n    });\n    const accounts = mySqlTable(\"account\", {\n        userId: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"userId\", { length: 255 })\n            .notNull()\n            .references(() => users.id, { onDelete: \"cascade\" }),\n        type: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"type\", { length: 255 })\n            .$type()\n            .notNull(),\n        provider: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"provider\", { length: 255 }).notNull(),\n        providerAccountId: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"providerAccountId\", {\n            length: 255,\n        }).notNull(),\n        refresh_token: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"refresh_token\", { length: 255 }),\n        access_token: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"access_token\", { length: 255 }),\n        expires_at: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_2__.int)(\"expires_at\"),\n        token_type: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"token_type\", { length: 255 }),\n        scope: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"scope\", { length: 255 }),\n        id_token: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"id_token\", { length: 255 }),\n        session_state: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"session_state\", { length: 255 }),\n    }, (account) => ({\n        compoundKey: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_3__.primaryKey)(account.provider, account.providerAccountId),\n    }));\n    const sessions = mySqlTable(\"session\", {\n        sessionToken: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"sessionToken\", { length: 255 })\n            .notNull()\n            .primaryKey(),\n        userId: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"userId\", { length: 255 })\n            .notNull()\n            .references(() => users.id, { onDelete: \"cascade\" }),\n        expires: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_1__.timestamp)(\"expires\", { mode: \"date\" }).notNull(),\n    });\n    const verificationTokens = mySqlTable(\"verificationToken\", {\n        identifier: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"identifier\", { length: 255 }).notNull(),\n        token: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_0__.varchar)(\"token\", { length: 255 }).notNull(),\n        expires: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_1__.timestamp)(\"expires\", { mode: \"date\" }).notNull(),\n    }, (vt) => ({\n        compoundKey: (0,drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_3__.primaryKey)(vt.identifier, vt.token),\n    }));\n    return { users, accounts, sessions, verificationTokens };\n}\nfunction mySqlDrizzleAdapter(client, tableFn = drizzle_orm_mysql_core__WEBPACK_IMPORTED_MODULE_4__.mysqlTable) {\n    const { users, accounts, sessions, verificationTokens } = createTables(tableFn);\n    return {\n        async createUser(data) {\n            const id = crypto.randomUUID();\n            await client.insert(users).values({ ...data, id });\n            return await client\n                .select()\n                .from(users)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(users.id, id))\n                .then((res) => res[0]);\n        },\n        async getUser(data) {\n            const thing = (await client\n                .select()\n                .from(users)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(users.id, data))\n                .then((res) => res[0])) ?? null;\n            return thing;\n        },\n        async getUserByEmail(data) {\n            const user = (await client\n                .select()\n                .from(users)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(users.email, data))\n                .then((res) => res[0])) ?? null;\n            return user;\n        },\n        async createSession(data) {\n            await client.insert(sessions).values(data);\n            return await client\n                .select()\n                .from(sessions)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(sessions.sessionToken, data.sessionToken))\n                .then((res) => res[0]);\n        },\n        async getSessionAndUser(data) {\n            const sessionAndUser = (await client\n                .select({\n                session: sessions,\n                user: users,\n            })\n                .from(sessions)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(sessions.sessionToken, data))\n                .innerJoin(users, (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(users.id, sessions.userId))\n                .then((res) => res[0])) ?? null;\n            return sessionAndUser;\n        },\n        async updateUser(data) {\n            if (!data.id) {\n                throw new Error(\"No user id.\");\n            }\n            await client.update(users).set(data).where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(users.id, data.id));\n            return await client\n                .select()\n                .from(users)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(users.id, data.id))\n                .then((res) => res[0]);\n        },\n        async updateSession(data) {\n            await client\n                .update(sessions)\n                .set(data)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(sessions.sessionToken, data.sessionToken));\n            return await client\n                .select()\n                .from(sessions)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(sessions.sessionToken, data.sessionToken))\n                .then((res) => res[0]);\n        },\n        async linkAccount(rawAccount) {\n            await client.insert(accounts).values(rawAccount);\n        },\n        async getUserByAccount(account) {\n            const dbAccount = (await client\n                .select()\n                .from(accounts)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.and)((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(accounts.providerAccountId, account.providerAccountId), (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(accounts.provider, account.provider)))\n                .leftJoin(users, (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(accounts.userId, users.id))\n                .then((res) => res[0])) ?? null;\n            if (!dbAccount) {\n                return null;\n            }\n            return dbAccount.user;\n        },\n        async deleteSession(sessionToken) {\n            const session = (await client\n                .select()\n                .from(sessions)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(sessions.sessionToken, sessionToken))\n                .then((res) => res[0])) ?? null;\n            await client\n                .delete(sessions)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(sessions.sessionToken, sessionToken));\n            return session;\n        },\n        async createVerificationToken(token) {\n            await client.insert(verificationTokens).values(token);\n            return await client\n                .select()\n                .from(verificationTokens)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(verificationTokens.identifier, token.identifier))\n                .then((res) => res[0]);\n        },\n        async useVerificationToken(token) {\n            try {\n                const deletedToken = (await client\n                    .select()\n                    .from(verificationTokens)\n                    .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.and)((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(verificationTokens.identifier, token.identifier), (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(verificationTokens.token, token.token)))\n                    .then((res) => res[0])) ?? null;\n                await client\n                    .delete(verificationTokens)\n                    .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.and)((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(verificationTokens.identifier, token.identifier), (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(verificationTokens.token, token.token)));\n                return deletedToken;\n            }\n            catch (err) {\n                throw new Error(\"No verification token found.\");\n            }\n        },\n        async deleteUser(id) {\n            const user = await client\n                .select()\n                .from(users)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(users.id, id))\n                .then((res) => res[0] ?? null);\n            await client.delete(users).where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(users.id, id));\n            return user;\n        },\n        async unlinkAccount(account) {\n            await client\n                .delete(accounts)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.and)((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(accounts.providerAccountId, account.providerAccountId), (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(accounts.provider, account.provider)));\n            return undefined;\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/drizzle-adapter/lib/mysql.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/drizzle-adapter/lib/pg.js":
/*!******************************************************!*\
  !*** ./node_modules/@auth/drizzle-adapter/lib/pg.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTables: () => (/* binding */ createTables),\n/* harmony export */   pgDrizzleAdapter: () => (/* binding */ pgDrizzleAdapter)\n/* harmony export */ });\n/* harmony import */ var drizzle_orm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! drizzle-orm */ \"(action-browser)/./node_modules/drizzle-orm/index.js\");\n/* harmony import */ var drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! drizzle-orm/pg-core */ \"(action-browser)/./node_modules/drizzle-orm/pg-core/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(action-browser)/./node_modules/@auth/drizzle-adapter/lib/utils.js\");\n\n\n\nfunction createTables(pgTable) {\n    const users = pgTable(\"user\", {\n        id: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"id\").notNull().primaryKey(),\n        name: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"name\"),\n        email: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"email\").notNull(),\n        emailVerified: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.timestamp)(\"emailVerified\", { mode: \"date\" }),\n        image: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"image\"),\n    });\n    const accounts = pgTable(\"account\", {\n        userId: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"userId\")\n            .notNull()\n            .references(() => users.id, { onDelete: \"cascade\" }),\n        type: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"type\").$type().notNull(),\n        provider: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"provider\").notNull(),\n        providerAccountId: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"providerAccountId\").notNull(),\n        refresh_token: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"refresh_token\"),\n        access_token: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"access_token\"),\n        expires_at: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.integer)(\"expires_at\"),\n        token_type: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"token_type\"),\n        scope: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"scope\"),\n        id_token: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"id_token\"),\n        session_state: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"session_state\"),\n    }, (account) => ({\n        compoundKey: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.primaryKey)(account.provider, account.providerAccountId),\n    }));\n    const sessions = pgTable(\"session\", {\n        sessionToken: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"sessionToken\").notNull().primaryKey(),\n        userId: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"userId\")\n            .notNull()\n            .references(() => users.id, { onDelete: \"cascade\" }),\n        expires: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.timestamp)(\"expires\", { mode: \"date\" }).notNull(),\n    });\n    const verificationTokens = pgTable(\"verificationToken\", {\n        identifier: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"identifier\").notNull(),\n        token: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"token\").notNull(),\n        expires: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.timestamp)(\"expires\", { mode: \"date\" }).notNull(),\n    }, (vt) => ({\n        compoundKey: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.primaryKey)(vt.identifier, vt.token),\n    }));\n    return { users, accounts, sessions, verificationTokens };\n}\nfunction pgDrizzleAdapter(client, tableFn = drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.pgTable) {\n    const { users, accounts, sessions, verificationTokens } = createTables(tableFn);\n    return {\n        async createUser(data) {\n            return await client\n                .insert(users)\n                .values({ ...data, id: crypto.randomUUID() })\n                .returning()\n                .then((res) => res[0] ?? null);\n        },\n        async getUser(data) {\n            return await client\n                .select()\n                .from(users)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(users.id, data))\n                .then((res) => res[0] ?? null);\n        },\n        async getUserByEmail(data) {\n            return await client\n                .select()\n                .from(users)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(users.email, data))\n                .then((res) => res[0] ?? null);\n        },\n        async createSession(data) {\n            return await client\n                .insert(sessions)\n                .values(data)\n                .returning()\n                .then((res) => res[0]);\n        },\n        async getSessionAndUser(data) {\n            return await client\n                .select({\n                session: sessions,\n                user: users,\n            })\n                .from(sessions)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(sessions.sessionToken, data))\n                .innerJoin(users, (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(users.id, sessions.userId))\n                .then((res) => res[0] ?? null);\n        },\n        async updateUser(data) {\n            if (!data.id) {\n                throw new Error(\"No user id.\");\n            }\n            return await client\n                .update(users)\n                .set(data)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(users.id, data.id))\n                .returning()\n                .then((res) => res[0]);\n        },\n        async updateSession(data) {\n            return await client\n                .update(sessions)\n                .set(data)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(sessions.sessionToken, data.sessionToken))\n                .returning()\n                .then((res) => res[0]);\n        },\n        async linkAccount(rawAccount) {\n            return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.stripUndefined)(await client\n                .insert(accounts)\n                .values(rawAccount)\n                .returning()\n                .then((res) => res[0]));\n        },\n        async getUserByAccount(account) {\n            const dbAccount = (await client\n                .select()\n                .from(accounts)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.and)((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(accounts.providerAccountId, account.providerAccountId), (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(accounts.provider, account.provider)))\n                .leftJoin(users, (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(accounts.userId, users.id))\n                .then((res) => res[0])) ?? null;\n            return dbAccount?.user ?? null;\n        },\n        async deleteSession(sessionToken) {\n            const session = await client\n                .delete(sessions)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(sessions.sessionToken, sessionToken))\n                .returning()\n                .then((res) => res[0] ?? null);\n            return session;\n        },\n        async createVerificationToken(token) {\n            return await client\n                .insert(verificationTokens)\n                .values(token)\n                .returning()\n                .then((res) => res[0]);\n        },\n        async useVerificationToken(token) {\n            try {\n                return await client\n                    .delete(verificationTokens)\n                    .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.and)((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(verificationTokens.identifier, token.identifier), (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(verificationTokens.token, token.token)))\n                    .returning()\n                    .then((res) => res[0] ?? null);\n            }\n            catch (err) {\n                throw new Error(\"No verification token found.\");\n            }\n        },\n        async deleteUser(id) {\n            await client\n                .delete(users)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(users.id, id))\n                .returning()\n                .then((res) => res[0] ?? null);\n        },\n        async unlinkAccount(account) {\n            const { type, provider, providerAccountId, userId } = await client\n                .delete(accounts)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.and)((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(accounts.providerAccountId, account.providerAccountId), (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(accounts.provider, account.provider)))\n                .returning()\n                .then((res) => res[0] ?? null);\n            return { provider, type, providerAccountId, userId };\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/drizzle-adapter/lib/pg.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/drizzle-adapter/lib/pg.js":
/*!******************************************************!*\
  !*** ./node_modules/@auth/drizzle-adapter/lib/pg.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTables: () => (/* binding */ createTables),\n/* harmony export */   pgDrizzleAdapter: () => (/* binding */ pgDrizzleAdapter)\n/* harmony export */ });\n/* harmony import */ var drizzle_orm__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! drizzle-orm */ \"(rsc)/./node_modules/drizzle-orm/sql/expressions/conditions.js\");\n/* harmony import */ var drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! drizzle-orm/pg-core */ \"(rsc)/./node_modules/drizzle-orm/pg-core/columns/text.js\");\n/* harmony import */ var drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! drizzle-orm/pg-core */ \"(rsc)/./node_modules/drizzle-orm/pg-core/columns/timestamp.js\");\n/* harmony import */ var drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! drizzle-orm/pg-core */ \"(rsc)/./node_modules/drizzle-orm/pg-core/columns/integer.js\");\n/* harmony import */ var drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! drizzle-orm/pg-core */ \"(rsc)/./node_modules/drizzle-orm/pg-core/primary-keys.js\");\n/* harmony import */ var drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! drizzle-orm/pg-core */ \"(rsc)/./node_modules/drizzle-orm/pg-core/table.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@auth/drizzle-adapter/lib/utils.js\");\n\n\n\nfunction createTables(pgTable) {\n    const users = pgTable(\"user\", {\n        id: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"id\").notNull().primaryKey(),\n        name: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"name\"),\n        email: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"email\").notNull(),\n        emailVerified: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_2__.timestamp)(\"emailVerified\", { mode: \"date\" }),\n        image: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"image\"),\n    });\n    const accounts = pgTable(\"account\", {\n        userId: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"userId\")\n            .notNull()\n            .references(() => users.id, { onDelete: \"cascade\" }),\n        type: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"type\").$type().notNull(),\n        provider: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"provider\").notNull(),\n        providerAccountId: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"providerAccountId\").notNull(),\n        refresh_token: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"refresh_token\"),\n        access_token: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"access_token\"),\n        expires_at: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_3__.integer)(\"expires_at\"),\n        token_type: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"token_type\"),\n        scope: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"scope\"),\n        id_token: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"id_token\"),\n        session_state: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"session_state\"),\n    }, (account) => ({\n        compoundKey: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_4__.primaryKey)(account.provider, account.providerAccountId),\n    }));\n    const sessions = pgTable(\"session\", {\n        sessionToken: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"sessionToken\").notNull().primaryKey(),\n        userId: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"userId\")\n            .notNull()\n            .references(() => users.id, { onDelete: \"cascade\" }),\n        expires: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_2__.timestamp)(\"expires\", { mode: \"date\" }).notNull(),\n    });\n    const verificationTokens = pgTable(\"verificationToken\", {\n        identifier: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"identifier\").notNull(),\n        token: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"token\").notNull(),\n        expires: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_2__.timestamp)(\"expires\", { mode: \"date\" }).notNull(),\n    }, (vt) => ({\n        compoundKey: (0,drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_4__.primaryKey)(vt.identifier, vt.token),\n    }));\n    return { users, accounts, sessions, verificationTokens };\n}\nfunction pgDrizzleAdapter(client, tableFn = drizzle_orm_pg_core__WEBPACK_IMPORTED_MODULE_5__.pgTable) {\n    const { users, accounts, sessions, verificationTokens } = createTables(tableFn);\n    return {\n        async createUser(data) {\n            return await client\n                .insert(users)\n                .values({ ...data, id: crypto.randomUUID() })\n                .returning()\n                .then((res) => res[0] ?? null);\n        },\n        async getUser(data) {\n            return await client\n                .select()\n                .from(users)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_6__.eq)(users.id, data))\n                .then((res) => res[0] ?? null);\n        },\n        async getUserByEmail(data) {\n            return await client\n                .select()\n                .from(users)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_6__.eq)(users.email, data))\n                .then((res) => res[0] ?? null);\n        },\n        async createSession(data) {\n            return await client\n                .insert(sessions)\n                .values(data)\n                .returning()\n                .then((res) => res[0]);\n        },\n        async getSessionAndUser(data) {\n            return await client\n                .select({\n                session: sessions,\n                user: users,\n            })\n                .from(sessions)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_6__.eq)(sessions.sessionToken, data))\n                .innerJoin(users, (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_6__.eq)(users.id, sessions.userId))\n                .then((res) => res[0] ?? null);\n        },\n        async updateUser(data) {\n            if (!data.id) {\n                throw new Error(\"No user id.\");\n            }\n            return await client\n                .update(users)\n                .set(data)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_6__.eq)(users.id, data.id))\n                .returning()\n                .then((res) => res[0]);\n        },\n        async updateSession(data) {\n            return await client\n                .update(sessions)\n                .set(data)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_6__.eq)(sessions.sessionToken, data.sessionToken))\n                .returning()\n                .then((res) => res[0]);\n        },\n        async linkAccount(rawAccount) {\n            return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.stripUndefined)(await client\n                .insert(accounts)\n                .values(rawAccount)\n                .returning()\n                .then((res) => res[0]));\n        },\n        async getUserByAccount(account) {\n            const dbAccount = (await client\n                .select()\n                .from(accounts)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_6__.and)((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_6__.eq)(accounts.providerAccountId, account.providerAccountId), (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_6__.eq)(accounts.provider, account.provider)))\n                .leftJoin(users, (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_6__.eq)(accounts.userId, users.id))\n                .then((res) => res[0])) ?? null;\n            return dbAccount?.user ?? null;\n        },\n        async deleteSession(sessionToken) {\n            const session = await client\n                .delete(sessions)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_6__.eq)(sessions.sessionToken, sessionToken))\n                .returning()\n                .then((res) => res[0] ?? null);\n            return session;\n        },\n        async createVerificationToken(token) {\n            return await client\n                .insert(verificationTokens)\n                .values(token)\n                .returning()\n                .then((res) => res[0]);\n        },\n        async useVerificationToken(token) {\n            try {\n                return await client\n                    .delete(verificationTokens)\n                    .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_6__.and)((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_6__.eq)(verificationTokens.identifier, token.identifier), (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_6__.eq)(verificationTokens.token, token.token)))\n                    .returning()\n                    .then((res) => res[0] ?? null);\n            }\n            catch (err) {\n                throw new Error(\"No verification token found.\");\n            }\n        },\n        async deleteUser(id) {\n            await client\n                .delete(users)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_6__.eq)(users.id, id))\n                .returning()\n                .then((res) => res[0] ?? null);\n        },\n        async unlinkAccount(account) {\n            const { type, provider, providerAccountId, userId } = await client\n                .delete(accounts)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_6__.and)((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_6__.eq)(accounts.providerAccountId, account.providerAccountId), (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_6__.eq)(accounts.provider, account.provider)))\n                .returning()\n                .then((res) => res[0] ?? null);\n            return { provider, type, providerAccountId, userId };\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/drizzle-adapter/lib/pg.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/drizzle-adapter/lib/sqlite.js":
/*!**********************************************************!*\
  !*** ./node_modules/@auth/drizzle-adapter/lib/sqlite.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SQLiteDrizzleAdapter: () => (/* binding */ SQLiteDrizzleAdapter),\n/* harmony export */   createTables: () => (/* binding */ createTables)\n/* harmony export */ });\n/* harmony import */ var drizzle_orm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! drizzle-orm */ \"(action-browser)/./node_modules/drizzle-orm/index.js\");\n/* harmony import */ var drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! drizzle-orm/sqlite-core */ \"(action-browser)/./node_modules/drizzle-orm/sqlite-core/index.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(action-browser)/./node_modules/@auth/drizzle-adapter/lib/utils.js\");\n\n\n\nfunction createTables(sqliteTable) {\n    const users = sqliteTable(\"user\", {\n        id: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"id\").notNull().primaryKey(),\n        name: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"name\"),\n        email: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"email\").notNull(),\n        emailVerified: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.integer)(\"emailVerified\", { mode: \"timestamp_ms\" }),\n        image: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"image\"),\n    });\n    const accounts = sqliteTable(\"account\", {\n        userId: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"userId\")\n            .notNull()\n            .references(() => users.id, { onDelete: \"cascade\" }),\n        type: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"type\").$type().notNull(),\n        provider: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"provider\").notNull(),\n        providerAccountId: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"providerAccountId\").notNull(),\n        refresh_token: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"refresh_token\"),\n        access_token: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"access_token\"),\n        expires_at: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.integer)(\"expires_at\"),\n        token_type: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"token_type\"),\n        scope: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"scope\"),\n        id_token: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"id_token\"),\n        session_state: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"session_state\"),\n    }, (account) => ({\n        compoundKey: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.primaryKey)(account.provider, account.providerAccountId),\n    }));\n    const sessions = sqliteTable(\"session\", {\n        sessionToken: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"sessionToken\").notNull().primaryKey(),\n        userId: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"userId\")\n            .notNull()\n            .references(() => users.id, { onDelete: \"cascade\" }),\n        expires: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.integer)(\"expires\", { mode: \"timestamp_ms\" }).notNull(),\n    });\n    const verificationTokens = sqliteTable(\"verificationToken\", {\n        identifier: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"identifier\").notNull(),\n        token: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"token\").notNull(),\n        expires: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.integer)(\"expires\", { mode: \"timestamp_ms\" }).notNull(),\n    }, (vt) => ({\n        compoundKey: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.primaryKey)(vt.identifier, vt.token),\n    }));\n    return { users, accounts, sessions, verificationTokens };\n}\nfunction SQLiteDrizzleAdapter(client, tableFn = drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.sqliteTable) {\n    const { users, accounts, sessions, verificationTokens } = createTables(tableFn);\n    return {\n        async createUser(data) {\n            return await client\n                .insert(users)\n                .values({ ...data, id: crypto.randomUUID() })\n                .returning()\n                .get();\n        },\n        async getUser(data) {\n            const result = await client\n                .select()\n                .from(users)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(users.id, data))\n                .get();\n            return result ?? null;\n        },\n        async getUserByEmail(data) {\n            const result = await client\n                .select()\n                .from(users)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(users.email, data))\n                .get();\n            return result ?? null;\n        },\n        createSession(data) {\n            return client.insert(sessions).values(data).returning().get();\n        },\n        async getSessionAndUser(data) {\n            const result = await client\n                .select({ session: sessions, user: users })\n                .from(sessions)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(sessions.sessionToken, data))\n                .innerJoin(users, (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(users.id, sessions.userId))\n                .get();\n            return result ?? null;\n        },\n        async updateUser(data) {\n            if (!data.id) {\n                throw new Error(\"No user id.\");\n            }\n            const result = await client\n                .update(users)\n                .set(data)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(users.id, data.id))\n                .returning()\n                .get();\n            return result ?? null;\n        },\n        async updateSession(data) {\n            const result = await client\n                .update(sessions)\n                .set(data)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(sessions.sessionToken, data.sessionToken))\n                .returning()\n                .get();\n            return result ?? null;\n        },\n        async linkAccount(rawAccount) {\n            return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.stripUndefined)(await client.insert(accounts).values(rawAccount).returning().get());\n        },\n        async getUserByAccount(account) {\n            const results = await client\n                .select()\n                .from(accounts)\n                .leftJoin(users, (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(users.id, accounts.userId))\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.and)((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(accounts.provider, account.provider), (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(accounts.providerAccountId, account.providerAccountId)))\n                .get();\n            if (!results) {\n                return null;\n            }\n            return Promise.resolve(results).then((results) => results.user);\n        },\n        async deleteSession(sessionToken) {\n            const result = await client\n                .delete(sessions)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(sessions.sessionToken, sessionToken))\n                .returning()\n                .get();\n            return result ?? null;\n        },\n        async createVerificationToken(token) {\n            const result = await client\n                .insert(verificationTokens)\n                .values(token)\n                .returning()\n                .get();\n            return result ?? null;\n        },\n        async useVerificationToken(token) {\n            try {\n                const result = await client\n                    .delete(verificationTokens)\n                    .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.and)((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(verificationTokens.identifier, token.identifier), (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(verificationTokens.token, token.token)))\n                    .returning()\n                    .get();\n                return result ?? null;\n            }\n            catch (err) {\n                throw new Error(\"No verification token found.\");\n            }\n        },\n        async deleteUser(id) {\n            const result = await client\n                .delete(users)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(users.id, id))\n                .returning()\n                .get();\n            return result ?? null;\n        },\n        async unlinkAccount(account) {\n            await client\n                .delete(accounts)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.and)((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(accounts.providerAccountId, account.providerAccountId), (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_2__.eq)(accounts.provider, account.provider)))\n                .run();\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/drizzle-adapter/lib/sqlite.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/drizzle-adapter/lib/sqlite.js":
/*!**********************************************************!*\
  !*** ./node_modules/@auth/drizzle-adapter/lib/sqlite.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SQLiteDrizzleAdapter: () => (/* binding */ SQLiteDrizzleAdapter),\n/* harmony export */   createTables: () => (/* binding */ createTables)\n/* harmony export */ });\n/* harmony import */ var drizzle_orm__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! drizzle-orm */ \"(rsc)/./node_modules/drizzle-orm/sql/expressions/conditions.js\");\n/* harmony import */ var drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! drizzle-orm/sqlite-core */ \"(rsc)/./node_modules/drizzle-orm/sqlite-core/columns/text.js\");\n/* harmony import */ var drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! drizzle-orm/sqlite-core */ \"(rsc)/./node_modules/drizzle-orm/sqlite-core/columns/integer.js\");\n/* harmony import */ var drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! drizzle-orm/sqlite-core */ \"(rsc)/./node_modules/drizzle-orm/sqlite-core/primary-keys.js\");\n/* harmony import */ var drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! drizzle-orm/sqlite-core */ \"(rsc)/./node_modules/drizzle-orm/sqlite-core/table.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/@auth/drizzle-adapter/lib/utils.js\");\n\n\n\nfunction createTables(sqliteTable) {\n    const users = sqliteTable(\"user\", {\n        id: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"id\").notNull().primaryKey(),\n        name: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"name\"),\n        email: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"email\").notNull(),\n        emailVerified: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_2__.integer)(\"emailVerified\", { mode: \"timestamp_ms\" }),\n        image: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"image\"),\n    });\n    const accounts = sqliteTable(\"account\", {\n        userId: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"userId\")\n            .notNull()\n            .references(() => users.id, { onDelete: \"cascade\" }),\n        type: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"type\").$type().notNull(),\n        provider: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"provider\").notNull(),\n        providerAccountId: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"providerAccountId\").notNull(),\n        refresh_token: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"refresh_token\"),\n        access_token: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"access_token\"),\n        expires_at: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_2__.integer)(\"expires_at\"),\n        token_type: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"token_type\"),\n        scope: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"scope\"),\n        id_token: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"id_token\"),\n        session_state: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"session_state\"),\n    }, (account) => ({\n        compoundKey: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_3__.primaryKey)(account.provider, account.providerAccountId),\n    }));\n    const sessions = sqliteTable(\"session\", {\n        sessionToken: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"sessionToken\").notNull().primaryKey(),\n        userId: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"userId\")\n            .notNull()\n            .references(() => users.id, { onDelete: \"cascade\" }),\n        expires: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_2__.integer)(\"expires\", { mode: \"timestamp_ms\" }).notNull(),\n    });\n    const verificationTokens = sqliteTable(\"verificationToken\", {\n        identifier: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"identifier\").notNull(),\n        token: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_1__.text)(\"token\").notNull(),\n        expires: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_2__.integer)(\"expires\", { mode: \"timestamp_ms\" }).notNull(),\n    }, (vt) => ({\n        compoundKey: (0,drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_3__.primaryKey)(vt.identifier, vt.token),\n    }));\n    return { users, accounts, sessions, verificationTokens };\n}\nfunction SQLiteDrizzleAdapter(client, tableFn = drizzle_orm_sqlite_core__WEBPACK_IMPORTED_MODULE_4__.sqliteTable) {\n    const { users, accounts, sessions, verificationTokens } = createTables(tableFn);\n    return {\n        async createUser(data) {\n            return await client\n                .insert(users)\n                .values({ ...data, id: crypto.randomUUID() })\n                .returning()\n                .get();\n        },\n        async getUser(data) {\n            const result = await client\n                .select()\n                .from(users)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(users.id, data))\n                .get();\n            return result ?? null;\n        },\n        async getUserByEmail(data) {\n            const result = await client\n                .select()\n                .from(users)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(users.email, data))\n                .get();\n            return result ?? null;\n        },\n        createSession(data) {\n            return client.insert(sessions).values(data).returning().get();\n        },\n        async getSessionAndUser(data) {\n            const result = await client\n                .select({ session: sessions, user: users })\n                .from(sessions)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(sessions.sessionToken, data))\n                .innerJoin(users, (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(users.id, sessions.userId))\n                .get();\n            return result ?? null;\n        },\n        async updateUser(data) {\n            if (!data.id) {\n                throw new Error(\"No user id.\");\n            }\n            const result = await client\n                .update(users)\n                .set(data)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(users.id, data.id))\n                .returning()\n                .get();\n            return result ?? null;\n        },\n        async updateSession(data) {\n            const result = await client\n                .update(sessions)\n                .set(data)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(sessions.sessionToken, data.sessionToken))\n                .returning()\n                .get();\n            return result ?? null;\n        },\n        async linkAccount(rawAccount) {\n            return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.stripUndefined)(await client.insert(accounts).values(rawAccount).returning().get());\n        },\n        async getUserByAccount(account) {\n            const results = await client\n                .select()\n                .from(accounts)\n                .leftJoin(users, (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(users.id, accounts.userId))\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.and)((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(accounts.provider, account.provider), (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(accounts.providerAccountId, account.providerAccountId)))\n                .get();\n            if (!results) {\n                return null;\n            }\n            return Promise.resolve(results).then((results) => results.user);\n        },\n        async deleteSession(sessionToken) {\n            const result = await client\n                .delete(sessions)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(sessions.sessionToken, sessionToken))\n                .returning()\n                .get();\n            return result ?? null;\n        },\n        async createVerificationToken(token) {\n            const result = await client\n                .insert(verificationTokens)\n                .values(token)\n                .returning()\n                .get();\n            return result ?? null;\n        },\n        async useVerificationToken(token) {\n            try {\n                const result = await client\n                    .delete(verificationTokens)\n                    .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.and)((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(verificationTokens.identifier, token.identifier), (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(verificationTokens.token, token.token)))\n                    .returning()\n                    .get();\n                return result ?? null;\n            }\n            catch (err) {\n                throw new Error(\"No verification token found.\");\n            }\n        },\n        async deleteUser(id) {\n            const result = await client\n                .delete(users)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(users.id, id))\n                .returning()\n                .get();\n            return result ?? null;\n        },\n        async unlinkAccount(account) {\n            await client\n                .delete(accounts)\n                .where((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.and)((0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(accounts.providerAccountId, account.providerAccountId), (0,drizzle_orm__WEBPACK_IMPORTED_MODULE_5__.eq)(accounts.provider, account.provider)))\n                .run();\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF1dGgvZHJpenpsZS1hZGFwdGVyL2xpYi9zcWxpdGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBc0M7QUFDb0U7QUFDOUQ7QUFDckM7QUFDUDtBQUNBLFlBQVksNkRBQUk7QUFDaEIsY0FBYyw2REFBSTtBQUNsQixlQUFlLDZEQUFJO0FBQ25CLHVCQUF1QixnRUFBTyxvQkFBb0Isc0JBQXNCO0FBQ3hFLGVBQWUsNkRBQUk7QUFDbkIsS0FBSztBQUNMO0FBQ0EsZ0JBQWdCLDZEQUFJO0FBQ3BCO0FBQ0EsMENBQTBDLHFCQUFxQjtBQUMvRCxjQUFjLDZEQUFJO0FBQ2xCLGtCQUFrQiw2REFBSTtBQUN0QiwyQkFBMkIsNkRBQUk7QUFDL0IsdUJBQXVCLDZEQUFJO0FBQzNCLHNCQUFzQiw2REFBSTtBQUMxQixvQkFBb0IsZ0VBQU87QUFDM0Isb0JBQW9CLDZEQUFJO0FBQ3hCLGVBQWUsNkRBQUk7QUFDbkIsa0JBQWtCLDZEQUFJO0FBQ3RCLHVCQUF1Qiw2REFBSTtBQUMzQixLQUFLO0FBQ0wscUJBQXFCLG1FQUFVO0FBQy9CLEtBQUs7QUFDTDtBQUNBLHNCQUFzQiw2REFBSTtBQUMxQixnQkFBZ0IsNkRBQUk7QUFDcEI7QUFDQSwwQ0FBMEMscUJBQXFCO0FBQy9ELGlCQUFpQixnRUFBTyxjQUFjLHNCQUFzQjtBQUM1RCxLQUFLO0FBQ0w7QUFDQSxvQkFBb0IsNkRBQUk7QUFDeEIsZUFBZSw2REFBSTtBQUNuQixpQkFBaUIsZ0VBQU8sY0FBYyxzQkFBc0I7QUFDNUQsS0FBSztBQUNMLHFCQUFxQixtRUFBVTtBQUMvQixLQUFLO0FBQ0wsYUFBYTtBQUNiO0FBQ08sZ0RBQWdELGdFQUFvQjtBQUMzRSxZQUFZLGdEQUFnRDtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixrQ0FBa0M7QUFDNUQ7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiwrQ0FBRTtBQUN6QjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLCtDQUFFO0FBQ3pCO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsMEJBQTBCLGdDQUFnQztBQUMxRDtBQUNBLHVCQUF1QiwrQ0FBRTtBQUN6QixrQ0FBa0MsK0NBQUU7QUFDcEM7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiwrQ0FBRTtBQUN6QjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsK0NBQUU7QUFDekI7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsbUJBQW1CLHlEQUFjO0FBQ2pDLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQywrQ0FBRTtBQUNuQyx1QkFBdUIsZ0RBQUcsQ0FBQywrQ0FBRSx1Q0FBdUMsK0NBQUU7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsK0NBQUU7QUFDekI7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLGdEQUFHLENBQUMsK0NBQUUsbURBQW1ELCtDQUFFO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiwrQ0FBRTtBQUN6QjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGdEQUFHLENBQUMsK0NBQUUseURBQXlELCtDQUFFO0FBQ3hGO0FBQ0EsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXYtZmluZGVyLy4vbm9kZV9tb2R1bGVzL0BhdXRoL2RyaXp6bGUtYWRhcHRlci9saWIvc3FsaXRlLmpzPzY2NzciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZXEsIGFuZCB9IGZyb20gXCJkcml6emxlLW9ybVwiO1xuaW1wb3J0IHsgaW50ZWdlciwgc3FsaXRlVGFibGUgYXMgZGVmYXVsdFNxbGl0ZVRhYmxlRm4sIHRleHQsIHByaW1hcnlLZXksIH0gZnJvbSBcImRyaXp6bGUtb3JtL3NxbGl0ZS1jb3JlXCI7XG5pbXBvcnQgeyBzdHJpcFVuZGVmaW5lZCB9IGZyb20gXCIuL3V0aWxzLmpzXCI7XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlVGFibGVzKHNxbGl0ZVRhYmxlKSB7XG4gICAgY29uc3QgdXNlcnMgPSBzcWxpdGVUYWJsZShcInVzZXJcIiwge1xuICAgICAgICBpZDogdGV4dChcImlkXCIpLm5vdE51bGwoKS5wcmltYXJ5S2V5KCksXG4gICAgICAgIG5hbWU6IHRleHQoXCJuYW1lXCIpLFxuICAgICAgICBlbWFpbDogdGV4dChcImVtYWlsXCIpLm5vdE51bGwoKSxcbiAgICAgICAgZW1haWxWZXJpZmllZDogaW50ZWdlcihcImVtYWlsVmVyaWZpZWRcIiwgeyBtb2RlOiBcInRpbWVzdGFtcF9tc1wiIH0pLFxuICAgICAgICBpbWFnZTogdGV4dChcImltYWdlXCIpLFxuICAgIH0pO1xuICAgIGNvbnN0IGFjY291bnRzID0gc3FsaXRlVGFibGUoXCJhY2NvdW50XCIsIHtcbiAgICAgICAgdXNlcklkOiB0ZXh0KFwidXNlcklkXCIpXG4gICAgICAgICAgICAubm90TnVsbCgpXG4gICAgICAgICAgICAucmVmZXJlbmNlcygoKSA9PiB1c2Vycy5pZCwgeyBvbkRlbGV0ZTogXCJjYXNjYWRlXCIgfSksXG4gICAgICAgIHR5cGU6IHRleHQoXCJ0eXBlXCIpLiR0eXBlKCkubm90TnVsbCgpLFxuICAgICAgICBwcm92aWRlcjogdGV4dChcInByb3ZpZGVyXCIpLm5vdE51bGwoKSxcbiAgICAgICAgcHJvdmlkZXJBY2NvdW50SWQ6IHRleHQoXCJwcm92aWRlckFjY291bnRJZFwiKS5ub3ROdWxsKCksXG4gICAgICAgIHJlZnJlc2hfdG9rZW46IHRleHQoXCJyZWZyZXNoX3Rva2VuXCIpLFxuICAgICAgICBhY2Nlc3NfdG9rZW46IHRleHQoXCJhY2Nlc3NfdG9rZW5cIiksXG4gICAgICAgIGV4cGlyZXNfYXQ6IGludGVnZXIoXCJleHBpcmVzX2F0XCIpLFxuICAgICAgICB0b2tlbl90eXBlOiB0ZXh0KFwidG9rZW5fdHlwZVwiKSxcbiAgICAgICAgc2NvcGU6IHRleHQoXCJzY29wZVwiKSxcbiAgICAgICAgaWRfdG9rZW46IHRleHQoXCJpZF90b2tlblwiKSxcbiAgICAgICAgc2Vzc2lvbl9zdGF0ZTogdGV4dChcInNlc3Npb25fc3RhdGVcIiksXG4gICAgfSwgKGFjY291bnQpID0+ICh7XG4gICAgICAgIGNvbXBvdW5kS2V5OiBwcmltYXJ5S2V5KGFjY291bnQucHJvdmlkZXIsIGFjY291bnQucHJvdmlkZXJBY2NvdW50SWQpLFxuICAgIH0pKTtcbiAgICBjb25zdCBzZXNzaW9ucyA9IHNxbGl0ZVRhYmxlKFwic2Vzc2lvblwiLCB7XG4gICAgICAgIHNlc3Npb25Ub2tlbjogdGV4dChcInNlc3Npb25Ub2tlblwiKS5ub3ROdWxsKCkucHJpbWFyeUtleSgpLFxuICAgICAgICB1c2VySWQ6IHRleHQoXCJ1c2VySWRcIilcbiAgICAgICAgICAgIC5ub3ROdWxsKClcbiAgICAgICAgICAgIC5yZWZlcmVuY2VzKCgpID0+IHVzZXJzLmlkLCB7IG9uRGVsZXRlOiBcImNhc2NhZGVcIiB9KSxcbiAgICAgICAgZXhwaXJlczogaW50ZWdlcihcImV4cGlyZXNcIiwgeyBtb2RlOiBcInRpbWVzdGFtcF9tc1wiIH0pLm5vdE51bGwoKSxcbiAgICB9KTtcbiAgICBjb25zdCB2ZXJpZmljYXRpb25Ub2tlbnMgPSBzcWxpdGVUYWJsZShcInZlcmlmaWNhdGlvblRva2VuXCIsIHtcbiAgICAgICAgaWRlbnRpZmllcjogdGV4dChcImlkZW50aWZpZXJcIikubm90TnVsbCgpLFxuICAgICAgICB0b2tlbjogdGV4dChcInRva2VuXCIpLm5vdE51bGwoKSxcbiAgICAgICAgZXhwaXJlczogaW50ZWdlcihcImV4cGlyZXNcIiwgeyBtb2RlOiBcInRpbWVzdGFtcF9tc1wiIH0pLm5vdE51bGwoKSxcbiAgICB9LCAodnQpID0+ICh7XG4gICAgICAgIGNvbXBvdW5kS2V5OiBwcmltYXJ5S2V5KHZ0LmlkZW50aWZpZXIsIHZ0LnRva2VuKSxcbiAgICB9KSk7XG4gICAgcmV0dXJuIHsgdXNlcnMsIGFjY291bnRzLCBzZXNzaW9ucywgdmVyaWZpY2F0aW9uVG9rZW5zIH07XG59XG5leHBvcnQgZnVuY3Rpb24gU1FMaXRlRHJpenpsZUFkYXB0ZXIoY2xpZW50LCB0YWJsZUZuID0gZGVmYXVsdFNxbGl0ZVRhYmxlRm4pIHtcbiAgICBjb25zdCB7IHVzZXJzLCBhY2NvdW50cywgc2Vzc2lvbnMsIHZlcmlmaWNhdGlvblRva2VucyB9ID0gY3JlYXRlVGFibGVzKHRhYmxlRm4pO1xuICAgIHJldHVybiB7XG4gICAgICAgIGFzeW5jIGNyZWF0ZVVzZXIoZGF0YSkge1xuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IGNsaWVudFxuICAgICAgICAgICAgICAgIC5pbnNlcnQodXNlcnMpXG4gICAgICAgICAgICAgICAgLnZhbHVlcyh7IC4uLmRhdGEsIGlkOiBjcnlwdG8ucmFuZG9tVVVJRCgpIH0pXG4gICAgICAgICAgICAgICAgLnJldHVybmluZygpXG4gICAgICAgICAgICAgICAgLmdldCgpO1xuICAgICAgICB9LFxuICAgICAgICBhc3luYyBnZXRVc2VyKGRhdGEpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGNsaWVudFxuICAgICAgICAgICAgICAgIC5zZWxlY3QoKVxuICAgICAgICAgICAgICAgIC5mcm9tKHVzZXJzKVxuICAgICAgICAgICAgICAgIC53aGVyZShlcSh1c2Vycy5pZCwgZGF0YSkpXG4gICAgICAgICAgICAgICAgLmdldCgpO1xuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCA/PyBudWxsO1xuICAgICAgICB9LFxuICAgICAgICBhc3luYyBnZXRVc2VyQnlFbWFpbChkYXRhKSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBjbGllbnRcbiAgICAgICAgICAgICAgICAuc2VsZWN0KClcbiAgICAgICAgICAgICAgICAuZnJvbSh1c2VycylcbiAgICAgICAgICAgICAgICAud2hlcmUoZXEodXNlcnMuZW1haWwsIGRhdGEpKVxuICAgICAgICAgICAgICAgIC5nZXQoKTtcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQgPz8gbnVsbDtcbiAgICAgICAgfSxcbiAgICAgICAgY3JlYXRlU2Vzc2lvbihkYXRhKSB7XG4gICAgICAgICAgICByZXR1cm4gY2xpZW50Lmluc2VydChzZXNzaW9ucykudmFsdWVzKGRhdGEpLnJldHVybmluZygpLmdldCgpO1xuICAgICAgICB9LFxuICAgICAgICBhc3luYyBnZXRTZXNzaW9uQW5kVXNlcihkYXRhKSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBjbGllbnRcbiAgICAgICAgICAgICAgICAuc2VsZWN0KHsgc2Vzc2lvbjogc2Vzc2lvbnMsIHVzZXI6IHVzZXJzIH0pXG4gICAgICAgICAgICAgICAgLmZyb20oc2Vzc2lvbnMpXG4gICAgICAgICAgICAgICAgLndoZXJlKGVxKHNlc3Npb25zLnNlc3Npb25Ub2tlbiwgZGF0YSkpXG4gICAgICAgICAgICAgICAgLmlubmVySm9pbih1c2VycywgZXEodXNlcnMuaWQsIHNlc3Npb25zLnVzZXJJZCkpXG4gICAgICAgICAgICAgICAgLmdldCgpO1xuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCA/PyBudWxsO1xuICAgICAgICB9LFxuICAgICAgICBhc3luYyB1cGRhdGVVc2VyKGRhdGEpIHtcbiAgICAgICAgICAgIGlmICghZGF0YS5pZCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIHVzZXIgaWQuXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgY2xpZW50XG4gICAgICAgICAgICAgICAgLnVwZGF0ZSh1c2VycylcbiAgICAgICAgICAgICAgICAuc2V0KGRhdGEpXG4gICAgICAgICAgICAgICAgLndoZXJlKGVxKHVzZXJzLmlkLCBkYXRhLmlkKSlcbiAgICAgICAgICAgICAgICAucmV0dXJuaW5nKClcbiAgICAgICAgICAgICAgICAuZ2V0KCk7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0ID8/IG51bGw7XG4gICAgICAgIH0sXG4gICAgICAgIGFzeW5jIHVwZGF0ZVNlc3Npb24oZGF0YSkge1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgY2xpZW50XG4gICAgICAgICAgICAgICAgLnVwZGF0ZShzZXNzaW9ucylcbiAgICAgICAgICAgICAgICAuc2V0KGRhdGEpXG4gICAgICAgICAgICAgICAgLndoZXJlKGVxKHNlc3Npb25zLnNlc3Npb25Ub2tlbiwgZGF0YS5zZXNzaW9uVG9rZW4pKVxuICAgICAgICAgICAgICAgIC5yZXR1cm5pbmcoKVxuICAgICAgICAgICAgICAgIC5nZXQoKTtcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQgPz8gbnVsbDtcbiAgICAgICAgfSxcbiAgICAgICAgYXN5bmMgbGlua0FjY291bnQocmF3QWNjb3VudCkge1xuICAgICAgICAgICAgcmV0dXJuIHN0cmlwVW5kZWZpbmVkKGF3YWl0IGNsaWVudC5pbnNlcnQoYWNjb3VudHMpLnZhbHVlcyhyYXdBY2NvdW50KS5yZXR1cm5pbmcoKS5nZXQoKSk7XG4gICAgICAgIH0sXG4gICAgICAgIGFzeW5jIGdldFVzZXJCeUFjY291bnQoYWNjb3VudCkge1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0cyA9IGF3YWl0IGNsaWVudFxuICAgICAgICAgICAgICAgIC5zZWxlY3QoKVxuICAgICAgICAgICAgICAgIC5mcm9tKGFjY291bnRzKVxuICAgICAgICAgICAgICAgIC5sZWZ0Sm9pbih1c2VycywgZXEodXNlcnMuaWQsIGFjY291bnRzLnVzZXJJZCkpXG4gICAgICAgICAgICAgICAgLndoZXJlKGFuZChlcShhY2NvdW50cy5wcm92aWRlciwgYWNjb3VudC5wcm92aWRlciksIGVxKGFjY291bnRzLnByb3ZpZGVyQWNjb3VudElkLCBhY2NvdW50LnByb3ZpZGVyQWNjb3VudElkKSkpXG4gICAgICAgICAgICAgICAgLmdldCgpO1xuICAgICAgICAgICAgaWYgKCFyZXN1bHRzKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHJlc3VsdHMpLnRoZW4oKHJlc3VsdHMpID0+IHJlc3VsdHMudXNlcik7XG4gICAgICAgIH0sXG4gICAgICAgIGFzeW5jIGRlbGV0ZVNlc3Npb24oc2Vzc2lvblRva2VuKSB7XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBjbGllbnRcbiAgICAgICAgICAgICAgICAuZGVsZXRlKHNlc3Npb25zKVxuICAgICAgICAgICAgICAgIC53aGVyZShlcShzZXNzaW9ucy5zZXNzaW9uVG9rZW4sIHNlc3Npb25Ub2tlbikpXG4gICAgICAgICAgICAgICAgLnJldHVybmluZygpXG4gICAgICAgICAgICAgICAgLmdldCgpO1xuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdCA/PyBudWxsO1xuICAgICAgICB9LFxuICAgICAgICBhc3luYyBjcmVhdGVWZXJpZmljYXRpb25Ub2tlbih0b2tlbikge1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgY2xpZW50XG4gICAgICAgICAgICAgICAgLmluc2VydCh2ZXJpZmljYXRpb25Ub2tlbnMpXG4gICAgICAgICAgICAgICAgLnZhbHVlcyh0b2tlbilcbiAgICAgICAgICAgICAgICAucmV0dXJuaW5nKClcbiAgICAgICAgICAgICAgICAuZ2V0KCk7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0ID8/IG51bGw7XG4gICAgICAgIH0sXG4gICAgICAgIGFzeW5jIHVzZVZlcmlmaWNhdGlvblRva2VuKHRva2VuKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGNsaWVudFxuICAgICAgICAgICAgICAgICAgICAuZGVsZXRlKHZlcmlmaWNhdGlvblRva2VucylcbiAgICAgICAgICAgICAgICAgICAgLndoZXJlKGFuZChlcSh2ZXJpZmljYXRpb25Ub2tlbnMuaWRlbnRpZmllciwgdG9rZW4uaWRlbnRpZmllciksIGVxKHZlcmlmaWNhdGlvblRva2Vucy50b2tlbiwgdG9rZW4udG9rZW4pKSlcbiAgICAgICAgICAgICAgICAgICAgLnJldHVybmluZygpXG4gICAgICAgICAgICAgICAgICAgIC5nZXQoKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0ID8/IG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gdmVyaWZpY2F0aW9uIHRva2VuIGZvdW5kLlwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgYXN5bmMgZGVsZXRlVXNlcihpZCkge1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgY2xpZW50XG4gICAgICAgICAgICAgICAgLmRlbGV0ZSh1c2VycylcbiAgICAgICAgICAgICAgICAud2hlcmUoZXEodXNlcnMuaWQsIGlkKSlcbiAgICAgICAgICAgICAgICAucmV0dXJuaW5nKClcbiAgICAgICAgICAgICAgICAuZ2V0KCk7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0ID8/IG51bGw7XG4gICAgICAgIH0sXG4gICAgICAgIGFzeW5jIHVubGlua0FjY291bnQoYWNjb3VudCkge1xuICAgICAgICAgICAgYXdhaXQgY2xpZW50XG4gICAgICAgICAgICAgICAgLmRlbGV0ZShhY2NvdW50cylcbiAgICAgICAgICAgICAgICAud2hlcmUoYW5kKGVxKGFjY291bnRzLnByb3ZpZGVyQWNjb3VudElkLCBhY2NvdW50LnByb3ZpZGVyQWNjb3VudElkKSwgZXEoYWNjb3VudHMucHJvdmlkZXIsIGFjY291bnQucHJvdmlkZXIpKSlcbiAgICAgICAgICAgICAgICAucnVuKCk7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/drizzle-adapter/lib/sqlite.js\n");

/***/ }),

/***/ "(action-browser)/./node_modules/@auth/drizzle-adapter/lib/utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/@auth/drizzle-adapter/lib/utils.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stripUndefined: () => (/* binding */ stripUndefined)\n/* harmony export */ });\nfunction stripUndefined(obj) {\n    const result = {};\n    for (const key in obj)\n        if (obj[key] !== undefined)\n            result[key] = obj[key];\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AYXV0aC9kcml6emxlLWFkYXB0ZXIvbGliL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Rldi1maW5kZXIvLi9ub2RlX21vZHVsZXMvQGF1dGgvZHJpenpsZS1hZGFwdGVyL2xpYi91dGlscy5qcz8wNzFhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBzdHJpcFVuZGVmaW5lZChvYmopIHtcbiAgICBjb25zdCByZXN1bHQgPSB7fTtcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBvYmopXG4gICAgICAgIGlmIChvYmpba2V5XSAhPT0gdW5kZWZpbmVkKVxuICAgICAgICAgICAgcmVzdWx0W2tleV0gPSBvYmpba2V5XTtcbiAgICByZXR1cm4gcmVzdWx0O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/@auth/drizzle-adapter/lib/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@auth/drizzle-adapter/lib/utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/@auth/drizzle-adapter/lib/utils.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stripUndefined: () => (/* binding */ stripUndefined)\n/* harmony export */ });\nfunction stripUndefined(obj) {\n    const result = {};\n    for (const key in obj)\n        if (obj[key] !== undefined)\n            result[key] = obj[key];\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGF1dGgvZHJpenpsZS1hZGFwdGVyL2xpYi91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kZXYtZmluZGVyLy4vbm9kZV9tb2R1bGVzL0BhdXRoL2RyaXp6bGUtYWRhcHRlci9saWIvdXRpbHMuanM/ZmNkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gc3RyaXBVbmRlZmluZWQob2JqKSB7XG4gICAgY29uc3QgcmVzdWx0ID0ge307XG4gICAgZm9yIChjb25zdCBrZXkgaW4gb2JqKVxuICAgICAgICBpZiAob2JqW2tleV0gIT09IHVuZGVmaW5lZClcbiAgICAgICAgICAgIHJlc3VsdFtrZXldID0gb2JqW2tleV07XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@auth/drizzle-adapter/lib/utils.js\n");

/***/ })

};
;